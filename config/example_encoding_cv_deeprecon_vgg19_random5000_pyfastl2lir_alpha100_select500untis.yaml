# CV feature encoding

encoder:
  name: deeprecon_cv_fmriprep_pyfastl2lir_alpha100_select500units
  path: ./data/feature_encoding_cv/ImageNetTraining/${encoder.name}/${encoder.features.name}
  parameters:
    alpha: 100

  fmri:
    name: ImageNetTraining_fmriprep_volume_native
    subjects:
      #- name: sub-01
      #  paths:
      #    - ./data/fmri/Deeprecon/sub-01_${encoder.fmri.name}_vc.h5
      #- name: sub-02
      #  paths:
      #    - ./data/fmri/Deeprecon/sub-02_${encoder.fmri.name}_vc.h5
      - name: sub-03
        paths:
          - ./data/fmri/Deeprecon/sub-03_${encoder.fmri.name}_vc.h5
    rois:
      #- {name: V1,  select: ROI_V1 = 1}
      #- {name: V2,  select: ROI_V2 = 1}
      #- {name: V3,  select: ROI_V3 = 1}
      - {name: hV4, select: ROI_hV4 = 1}
      #- {name: LOC, select: ROI_LOC = 1}
      #- {name: FFA, select: ROI_FFA = 1}
      #- {name: PPA, select: ROI_PPA = 1}
      #- {name: LVC, select: ROI_LVC = 1}
      #- {name: HVC, select: ROI_HVC = 1}
    label_key: stimulus_name

  features:
    name: caffe/VGG19_random5000
    paths:
      - ./data/features/ImageNetTraining/${encoder.features.name}
    layers:
      #- {name: conv1_1, num: 500}
      #- {name: conv1_2, num: 500}
      #- {name: conv2_1, num: 500}
      #- {name: conv2_2, num: 500}
      #- {name: conv3_1, num: 500}
      #- {name: conv3_2, num: 500}
      #- {name: conv3_3, num: 500}
      #- {name: conv3_4, num: 500}
      #- {name: conv4_1, num: 500}
      #- {name: conv4_2, num: 500}
      #- {name: conv4_3, num: 500}
      #- {name: conv4_4, num: 500}
      #- {name: conv5_1, num: 500}
      #- {name: conv5_2, num: 500}
      #- {name: conv5_3, num: 500}
      #- {name: conv5_4, num: 500}
      #- {name: fc6,     num: 500}
      #- {name: fc7,     num: 500}
      - {name: fc8,     num: 500}

encoded_fmri:
  name: deeprecon_cv_fmriprep_pyfastl2lir_alpha100_select500units
  path: ./data/feature_encoding_cv/ImageNetTraining/${encoded_fmri.name}/${encoded_fmri.features.name}
  parameters:
    average_sample: true

  encoder:
    name: ${encoder.features.name}
    path: ./data/feature_encoding_cv/ImageNetTraining/${encoder.name}/${encoder.features.name}
    parameters:
      alpha: ${encoder.parameters.alpha}
      chunk_axis: ${encoder.parameters.chunk_axis}

  fmri:
    name: ImageNetTraining_fmriprep_volume_native
    subjects:
      #- name: sub-01
      #  paths:
      #    - ./data/fmri/Deeprecon/sub-01_${encoded_fmri.fmri.name}_vc.h5
      #- name: sub-02
      #  paths:
      #    - ./data/fmri/Deeprecon/sub-02_${encoded_fmri.fmri.name}_vc.h5
      - name: sub-03
        paths:
          - ./data/fmri/Deeprecon/sub-03_${encoded_fmri.fmri.name}_vc.h5
    rois:
      #- {name: V1,  select: ROI_V1 = 1}
      #- {name: V2,  select: ROI_V2 = 1}
      #- {name: V3,  select: ROI_V3 = 1}
      - {name: hV4, select: ROI_hV4 = 1}
      #- {name: LOC, select: ROI_LOC = 1}
      #- {name: FFA, select: ROI_FFA = 1}
      #- {name: PPA, select: ROI_PPA = 1}
      #- {name: LVC, select: ROI_LVC = 1}
      #- {name: HVC, select: ROI_HVC = 1}
    label_key: stimulus_name
    exclude_labels:

  features:
    name: caffe/VGG19_random5000
    paths:
      - ./data/features/ImageNetTraining/${encoded_fmri.features.name}
    layers:
      #- {name: conv1_1, num: 500}
      #- {name: conv1_2, num: 500}
      #- {name: conv2_1, num: 500}
      #- {name: conv2_2, num: 500}
      #- {name: conv3_1, num: 500}
      #- {name: conv3_2, num: 500}
      #- {name: conv3_3, num: 500}
      #- {name: conv3_4, num: 500}
      #- {name: conv4_1, num: 500}
      #- {name: conv4_2, num: 500}
      #- {name: conv4_3, num: 500}
      #- {name: conv4_4, num: 500}
      #- {name: conv5_1, num: 500}
      #- {name: conv5_2, num: 500}
      #- {name: conv5_3, num: 500}
      #- {name: conv5_4, num: 500}
      #- {name: fc6,     num: 500}
      #- {name: fc7,     num: 500}
      - {name: fc8,     num: 500}

# Cross-validation setting
cv:
  # Key used to split training and test samples for cross-validation (e.g., 'Run')
  key: Run

  # Values of the key splitting training and test samples in each cross-validation fold.
  # If omitted, leave-one-out cross-validation will be performed based on values of `cv.key`.
  #
  # folds:
  #   - {
  #     name: fold1,
  #     train: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],
  #     test:  [1, 2, 3]
  #   }
  #   - {
  #     name: fold2,
  #     train: [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],
  #     test:  [4, 5, 6]
  #   }
  #   - {
  #     name: fold3,
  #     train: [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],
  #     test:  [7, 8, 9]
  #   }
  #   - {
  #     name: fold4,
  #     train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],
  #     test:  [10, 11, 12]
  #   }
  #   - {
  #     name: fold5,
  #     train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24],
  #     test:  [13, 14, 15]
  #   }
  #   - {
  #     name: fold6,
  #     train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24],
  #     test:  [16, 17, 18]
  #   }
  #   - {
  #     name: fold7,
  #     train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24],
  #     test:  [19, 20, 21]
  #   }
  #   - {
  #     name: fold8,
  #     train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21],
  #     test:  [22, 23, 24]
  #   }

  # Alternative notation
  #
  # folds:
  #   - train: [3, 4, 5, 6]
  #     test: [1]
  #   - train: [1, 2, 5, 6]
  #     test: [3]
  #   - train: [1, 2, 3, 4]
  #     test: [5]

  # In each CV fold, the training samples are removed if they have overlapping 
  # values of `cv exclusive key` with the test samples so that the training and
  # test samples do not have overlapping values for `cv exclusive key`.
  # Set `null` if not specified.
  #
  exclusive_key: category_index
